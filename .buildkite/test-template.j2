{% set docker_image = "us-central1-docker.pkg.dev/vllm-405802/vllm-ci-test-repo/vllm-test:$BUILDKITE_COMMIT" %}
{% set docker_image_ROCm = "us-central1-docker.pkg.dev/vllm-405802/vllm-ci-test-repo/vllm-test:$BUILDKITE_COMMIT" %}
{% set default_num_gpu = 1 %}
{% set default_working_dir = "/vllm-workspace/tests" %}

steps:

  - label: ":docker: build image"
    commands:
      - "docker build --build-arg max_jobs=16 --tag {{ docker_image }} --target test --progress plain ."
      - "docker push {{ docker_image }}"
    env:
      DOCKER_BUILDKIT: "1"
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
          limit: 5

  - wait


  - label: "AMD Default Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test.sh"

  - label: "AMD Regression Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_regression.sh"

  - label: "AMD Async Engine Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_async_engine.sh"

  - label: "AMD Basic Correctness Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_basic_correctness.sh"

  - label: "AMD Core Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_core.sh"

  - label: "AMD Distributed Comm Ops Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_distributed_comm_ops.sh"

  - label: "AMD Distributed Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_distributed.sh"

  - label: "AMD Engine Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_engine.sh"

  - label: "AMD Entrypoints Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_entrypoints.sh"

  - label: "AMD Examples Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_examples.sh"

  - label: "AMD Kernels Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_kernels.sh"

  - label: "AMD Models Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_models.sh"

  - label: "AMD Llava Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_llava.sh"

  - label: "AMD Prefix Caching Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_prefix_caching.sh"

  - label: "AMD Samplers Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_samplers.sh"

  - label: "AMD Logits Processor Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_logits_processor.sh"

  - label: "AMD Worker Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_worker.sh"

  - label: "AMD Speculative Decoding Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_speculative_decoding.sh"

  - label: "AMD LoRA Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_lora.sh"

  - label: "AMD Tensorizer Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_tensorizer.sh"

  - label: "AMD Metrics Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_metrics.sh"

  - label: "AMD Benchmarks Test"
    agents:
      queue: amd
    command: "bash .buildkite/run-amd-test_benchmarks.sh"

  - label: "Neuron Test"
    agents:
      queue: neuron
    command: bash .buildkite/run-neuron-test.sh

  - label: "CPU Test"
    command: bash .buildkite/run-cpu-test.sh

  {% for step in steps %}
  - label: "{{ step.label }}"
    agents:
      queue: kubernetes
    soft_fail: {{ step.soft_fail or false }}
    {% if step.parallelism %}
    parallelism: {{ step.parallelism }}
    {% endif %}
    retry:
      automatic:
        - exit_status: -1  # Agent was lost
          limit: 5
    plugins:
      - kubernetes:
          podSpec:
            volumes:
              - name: dshm
                emptyDir:
                  medium: Memory
            containers:
              - image: "{{ docker_image }}"
                command: ["bash"]
                args:
                - '-c'
                - "'cd {{ (step.working_dir or default_working_dir) | safe  }} && {{ step.command  or (step.commands | join(' && ')) | safe }}'"
                {% if not step.no_gpu %}
                resources:
                  requests:
                    nvidia.com/gpu: "{{ step.num_gpus or default_num_gpu }}"
                  limits:
                    nvidia.com/gpu: "{{ step.num_gpus or default_num_gpu }}"
                {% endif %}
                env:
                  - name: VLLM_USAGE_SOURCE
                    value: ci-test
                  - name: HF_TOKEN
                    valueFrom:
                      secretKeyRef:
                        name: hf-token-secret
                        key: token
                volumeMounts:
                  - mountPath: /dev/shm
                    name: dshm
  {% endfor %}
